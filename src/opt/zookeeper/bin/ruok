#!/usr/bin/env python3

import sys
import socket
import logging
import argparse
from typing import List, Dict

FORMAT = '%(asctime)-15s %(message)s'
logging.basicConfig(format=FORMAT)
log = logging.getLogger(__name__)
  
def check(host: str, port: int) -> int:
  try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    s.send(bytes("ruok", "utf-8"))
    data = s.recv(1024)
    s.close()
    imok = data == b"imok"
    if imok:
      logging.debug(f"Recieved {data} from {host}:{port}")
      return 0
    else:
      logging.error(f"Invalid status {data} returned from {host}:{port}")
      return 1
  except Exception as ex:
    logging.error(f"Error checking status: {ex}")
    return 255

def parse(args: List[str]) -> argparse.Namespace:
  parser = argparse.ArgumentParser()
  parser.add_argument("--host", type=str, default="localhost", help="The host to check. (localhost)")
  parser.add_argument("--port", type=int, default=2181, help="The zookeeper client port. (2181)")
  parser.add_argument("--debug", action="store_true")
  return parser.parse_args(args)

def main() -> int:
  args = parse(sys.argv[1:])
  if args.debug:
    log_level = logging.DEBUG
  else:
    log_level = logging.INFO

  logging.basicConfig(level=log_level)
  return check(args.host, args.port)


if __name__ == "__main__":
  sys.exit(main())  
